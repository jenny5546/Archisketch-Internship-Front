{"ast":null,"code":"var _jsxFileName = \"/Users/jaeeun/Desktop/On-Demand-Front/on-demand/src/components/themeSelector/themeSelector.js\";\nimport React, { Component } from 'react';\nimport ImagePicker from './components/image-picker';\nimport img1 from '../../static/img/floor_themes/residential/ex1.jpg';\nimport img2 from '../../static/img/floor_themes/residential/ex2.jpg';\nimport img3 from '../../static/img/floor_themes/residential/ex3.jpg';\nimport img4 from '../../static/img/floor_themes/residential/ex4.jpg';\nimport img5 from '../../static/img/floor_themes/residential/ex5.jpg';\nimport img6 from '../../static/img/floor_themes/residential/ex6.jpg';\nconst imageList = [img1, img2, img3, img4, img5, img6];\n\nclass ThemeSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    };\n  }\n\n  async onPickImages(images) {\n    //maximum 3개 고르기 \n    //3개 넘으면 alert로 3개 넘게 골랐다고 하고 토글로 취소하기 전까진 다른거 못고름  \n    await this.setState({\n      images\n    }); //골라서 list에 들어감 \n\n    await (this.state.images.length > 3 ? () => {\n      alert(\"oops\");\n    } : null);\n    await this.props.pickedThemes(this.state.images);\n    await console.log(this.state.images); // if (this.state.images.length > 3) { alert(\"oops\"); images.pop();}\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Theme Picker\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Select a maximum of three items\"), React.createElement(ImagePicker, {\n      images: imageList.map((image, i) => ({\n        src: image,\n        value: i\n      })),\n      onPick: this.onPickImages.bind(this),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ThemeSelector;","map":{"version":3,"sources":["/Users/jaeeun/Desktop/On-Demand-Front/on-demand/src/components/themeSelector/themeSelector.js"],"names":["React","Component","ImagePicker","img1","img2","img3","img4","img5","img6","imageList","ThemeSelector","constructor","props","state","images","onPickImages","setState","length","alert","pickedThemes","console","log","render","map","image","i","src","value","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,IAAP,MAAiB,mDAAjB;AACA,OAAOC,IAAP,MAAiB,mDAAjB;AACA,OAAOC,IAAP,MAAiB,mDAAjB;AACA,OAAOC,IAAP,MAAiB,mDAAjB;AACA,OAAOC,IAAP,MAAiB,mDAAjB;AACA,OAAOC,IAAP,MAAiB,mDAAjB;AAEA,MAAMC,SAAS,GAAG,CAACN,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,CAAlB;;AAEA,MAAME,aAAN,SAA4BT,SAA5B,CAAsC;AAElCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAED,QAAMC,YAAN,CAAmBD,MAAnB,EAA2B;AACvB;AACA;AACA,UAAM,KAAKE,QAAL,CAAc;AAACF,MAAAA;AAAD,KAAd,CAAN,CAHuB,CAGO;;AAC9B,WAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBG,MAAlB,GAA2B,CAA3B,GAAgC,MAAI;AAAEC,MAAAA,KAAK,CAAC,MAAD,CAAL;AAAc,KAApD,GAAwD,IAA/D;AACA,UAAM,KAAKN,KAAL,CAAWO,YAAX,CAAwB,KAAKN,KAAL,CAAWC,MAAnC,CAAN;AACA,UAAMM,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,MAAvB,CAAN,CANuB,CAOvB;AAGH;;AAGDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,EAGE,oBAAC,WAAD;AACE,MAAA,MAAM,EAAEb,SAAS,CAACc,GAAV,CAAc,CAACC,KAAD,EAAQC,CAAR,MAAe;AAACC,QAAAA,GAAG,EAAEF,KAAN;AAAaG,QAAAA,KAAK,EAAEF;AAApB,OAAf,CAAd,CADV;AAEE,MAAA,MAAM,EAAE,KAAKV,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAFV;AAGE,MAAA,QAAQ,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAYD;;AAnCiC;;AAuCtC,eAAelB,aAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport ImagePicker from './components/image-picker'\n\nimport img1 from '../../static/img/floor_themes/residential/ex1.jpg';\nimport img2 from '../../static/img/floor_themes/residential/ex2.jpg';\nimport img3 from '../../static/img/floor_themes/residential/ex3.jpg';\nimport img4 from '../../static/img/floor_themes/residential/ex4.jpg';\nimport img5 from '../../static/img/floor_themes/residential/ex5.jpg';\nimport img6 from '../../static/img/floor_themes/residential/ex6.jpg';\n\nconst imageList = [img1, img2, img3, img4, img5, img6]\n\nclass ThemeSelector extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        images: []\n      }\n    }\n\n    async onPickImages(images) { \n        //maximum 3개 고르기 \n        //3개 넘으면 alert로 3개 넘게 골랐다고 하고 토글로 취소하기 전까진 다른거 못고름  \n        await this.setState({images}) //골라서 list에 들어감 \n        await (this.state.images.length > 3 ? (()=>{ alert(\"oops\")}) : null)\n        await this.props.pickedThemes(this.state.images);\n        await console.log(this.state.images)\n        // if (this.state.images.length > 3) { alert(\"oops\"); images.pop();}\n        \n        \n    }\n    \n  \n    render() {\n      return (\n        <div>\n          <h1>Theme Picker</h1>\n          <h3>Select a maximum of three items</h3>\n          <ImagePicker \n            images={imageList.map((image, i) => ({src: image, value: i}))}\n            onPick={this.onPickImages.bind(this)}\n            multiple\n          />\n          {/* <textarea rows=\"4\" cols=\"100\" value={JSON.stringify(this.state.images)}/> */}\n        </div>\n      )\n    }\n}\n\n\nexport default ThemeSelector;"]},"metadata":{},"sourceType":"module"}