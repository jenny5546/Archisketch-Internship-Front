{"ast":null,"code":"var _jsxFileName = \"/Users/jaeeun/Desktop/On-Demand-Front/on-demand/src/components/themeSelector/components/image.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport imgCheck from './icon_check.png';\n\nconst ImageStyle = (width, height) => {\n  return {\n    width,\n    height,\n    objectFit: \"cover\"\n  };\n};\n\nexport default class Image extends Component {\n  render() {\n    const _this$props = this.props,\n          src = _this$props.src,\n          isSelected = _this$props.isSelected,\n          onImageClick = _this$props.onImageClick;\n    return React.createElement(\"div\", {\n      className: `responsive${isSelected ? \" selected\" : \"\"}`,\n      onClick: onImageClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: src,\n      className: `thumbnail${isSelected ? \" selected\" : \"\"}`,\n      style: ImageStyle(150, 150),\n      alt: \"select-images\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"checked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: imgCheck,\n      alt: \"checkIcon\",\n      style: {\n        width: 75,\n        height: 75,\n        objectFit: \"cover\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  }\n\n}\nImage.propTypes = {\n  src: PropTypes.string,\n  isSelected: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/jaeeun/Desktop/On-Demand-Front/on-demand/src/components/themeSelector/components/image.js"],"names":["React","Component","PropTypes","imgCheck","ImageStyle","width","height","objectFit","Image","render","props","src","isSelected","onImageClick","propTypes","string","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;;AACA,MAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAO;AACLD,IAAAA,KADK;AAELC,IAAAA,MAFK;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD,CAND;;AAQA,eAAe,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAE3CQ,EAAAA,MAAM,GAAG;AAAA,wBACmC,KAAKC,KADxC;AAAA,UACCC,GADD,eACCA,GADD;AAAA,UACMC,UADN,eACMA,UADN;AAAA,UACkBC,YADlB,eACkBA,YADlB;AAEP,WACE;AAAK,MAAA,SAAS,EAAG,aAAYD,UAAU,GAAG,WAAH,GAAiB,EAAG,EAA3D;AACE,MAAA,OAAO,EAAEC,YADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACI,MAAA,GAAG,EAAEF,GADT;AAEI,MAAA,SAAS,EAAG,YAAWC,UAAU,GAAG,WAAH,GAAiB,EAAG,EAFzD;AAGI,MAAA,KAAK,EAAER,UAAU,CAAC,GAAD,EAAM,GAAN,CAHrB;AAII,MAAA,GAAG,EAAG,eAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,QAAV;AAAoB,MAAA,GAAG,EAAC,WAAxB;AAAoC,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,MAAM,EAAE,EAArB;AAAyBC,QAAAA,SAAS,EAAE;AAApC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CARF,CADF;AAeD;;AAnB0C;AAsB7CC,KAAK,CAACM,SAAN,GAAkB;AAChBH,EAAAA,GAAG,EAAET,SAAS,CAACa,MADC;AAEhBH,EAAAA,UAAU,EAAEV,SAAS,CAACc;AAFN,CAAlB","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport imgCheck from './icon_check.png'\nconst ImageStyle = (width, height) => {\n  return {\n    width,\n    height,\n    objectFit: \"cover\"\n  }\n}\n\nexport default class Image extends Component {\n  \n  render() {\n    const { src, isSelected, onImageClick } = this.props\n    return (\n      <div className={`responsive${isSelected ? \" selected\" : \"\"}`}\n        onClick={onImageClick}>\n        <img \n            src={src}\n            className={`thumbnail${isSelected ? \" selected\" : \"\"}`}\n            style={ImageStyle(150, 150)}\n            alt = \"select-images\"\n        />\n        <div className=\"checked\">\n          <img src={imgCheck} alt=\"checkIcon\" style={{ width: 75, height: 75, objectFit: \"cover\" }}/>\n          <div className=\"icon\"/>\n        </div>\n      </div>\n    )\n  }\n}\n\nImage.propTypes = {\n  src: PropTypes.string,\n  isSelected: PropTypes.bool\n}"]},"metadata":{},"sourceType":"module"}